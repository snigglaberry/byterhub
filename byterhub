-- open source,i made all of this (including "sus script"some1 asked me to make it for them) tbh all you need is the esp
-- usless ahh script 🙏
getgenv().SecureMode = true

-- Load Rayfield UI
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "ByterHub",
    LoadingTitle = "Made by Chez",
    LoadingSubtitle = "Initializing Interface...",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "ByterHubConfigs",
        FileName = "Settings"
    },
    Discord = {
        Enabled = true,
        Invite = "jdA2PsmeDK",
        RememberJoins = true
    },
    KeySystem = false
})

-- TAB: Movement
local MovementTab = Window:CreateTab("Movement", 4483362458)
local MovementSection = MovementTab:CreateSection("Character Movement")

MovementTab:CreateSlider({
    Name = "WalkSpeed",
    SectionParent = MovementSection,
    Range = {0, 200},
    Increment = 5,
    Suffix = " Speed",
    CurrentValue = 16,
    Flag = "WalkSpeedSlider",
    Callback = function(Value)
        local plr = game.Players.LocalPlayer
        if plr and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
            plr.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = Value
        end
    end
})

MovementTab:CreateSlider({
    Name = "JumpPower",
    SectionParent = MovementSection,
    Range = {0, 200},
    Increment = 5,
    Suffix = " Jump",
    CurrentValue = 50,
    Flag = "JumpPowerSlider",
    Callback = function(Value)
        local plr = game.Players.LocalPlayer
        if plr and plr.Character and plr.Character:FindFirstChildOfClass("Humanoid") then
            plr.Character:FindFirstChildOfClass("Humanoid").JumpPower = Value
        end
    end
})

-- TAB: Trolling
local TrollTab = Window:CreateTab("Trolling", 4483362458)
local TrollSection = TrollTab:CreateSection("Troll Tools")

local function GetPlayer(Name)
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    Name = Name:lower()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            if player.Name:lower():match("^"..Name) or player.DisplayName:lower():match("^"..Name) then
                return player
            end
        end
    end
    return nil
end

local function SkidFling(TargetPlayer)
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character
    if not Character then return end
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart
    if not RootPart then return end

    local TCharacter = TargetPlayer.Character
    if not TCharacter then return end
    local THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
    local TRootPart = THumanoid and THumanoid.RootPart
    local THead = TCharacter:FindFirstChild("Head")
    local Accessory = TCharacter:FindFirstChildOfClass("Accessory")
    local Handle = Accessory and Accessory:FindFirstChild("Handle")

    local TargetPart = TRootPart or THead or Handle
    if not TargetPart then return end

    if THead then
        workspace.CurrentCamera.CameraSubject = THead
    elseif Handle then
        workspace.CurrentCamera.CameraSubject = Handle
    elseif THumanoid then
        workspace.CurrentCamera.CameraSubject = THumanoid
    end

    local function Fling(BasePart)
        local OldPos = RootPart.CFrame
        local FPos = function(Pos, Ang)
            RootPart.CFrame = BasePart.CFrame * Pos * Ang
            RootPart.Velocity = Vector3.new(9e8, 9e8, 9e8)
            RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
        end
        local startTime = tick()
        repeat
            FPos(CFrame.new(0, 1.5, 0), CFrame.Angles(math.rad(100), 0, 0))
            task.wait()
            FPos(CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(100), 0, 0))
            task.wait()
        until tick() - startTime > 1.5 or not BasePart.Parent
        RootPart.CFrame = OldPos
        workspace.CurrentCamera.CameraSubject = Humanoid
    end

    Fling(TargetPart)
end

local TargetName = ""
TrollTab:CreateInput({
    Name = "Target Name",
    SectionParent = TrollSection,
    PlaceholderText = "Enter player name",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        TargetName = Text
    end
})

TrollTab:CreateButton({
    Name = "Fling Target",
    SectionParent = TrollSection,
    Callback = function()
        local target = GetPlayer(TargetName)
        if target then
            SkidFling(target)
            Rayfield:Notify({
                Title = "Fling Target",
                Content = "Successfully flung "..target.Name,
                Duration = 4
            })
        else
            Rayfield:Notify({
                Title = "Fling Target",
                Content = "Player not found!",
                Duration = 4
            })
        end
    end
})

TrollTab:CreateButton({
    Name = "Fling All",
    SectionParent = TrollSection,
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/YttmR4P2"))()
        Rayfield:Notify({
            Title = "Fling All",
            Content = "Fling all started!",
            Duration = 5
        })
    end
})

-- TAB: ESP
local ESPTab = Window:CreateTab("ESP", 4483362458)
local ESPSection = ESPTab:CreateSection("Visual Enhancements")

local highlights, hitboxes, tracers = {}, {}, {}

local function ToggleHighlight(state)
    for _, h in pairs(highlights) do h:Destroy() end
    highlights = {}
    if state then
        for _, plr in ipairs(game.Players:GetPlayers()) do
            if plr ~= game.Players.LocalPlayer and plr.Character then
                local h = Instance.new("Highlight", plr.Character)
                h.FillColor = Color3.new(1,1,1)
                h.OutlineColor = Color3.new(1,1,1)
                table.insert(highlights, h)
            end
        end
    end
end

local function ToggleHitbox(state)
    for _, b in pairs(hitboxes) do b:Destroy() end
    hitboxes = {}
    if state then
        for _, plr in ipairs(game.Players:GetPlayers()) do
            local hrp = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                local box = Instance.new("BoxHandleAdornment", hrp)
                box.Adornee = hrp
                box.Size = Vector3.new(4,6,2)
                box.Transparency = 0.5
                box.Color3 = Color3.new(1,1,1)
                box.AlwaysOnTop = true
                table.insert(hitboxes, box)
            end
        end
    end
end

local function ToggleTracer(state)
    for _, l in ipairs(tracers) do l:Remove() end
    tracers = {}
    if not state then return end
    for _, plr in ipairs(game.Players:GetPlayers()) do
        if plr ~= game.Players.LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local line = Drawing.new("Line")
            line.Color = Color3.new(1,1,1)
            line.Thickness = 1
            line.Visible = true
            table.insert(tracers, line)

            game:GetService("RunService").RenderStepped:Connect(function()
                if not line then return end
                local hrp = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local screenPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(hrp.Position)
                    line.From = Vector2.new(workspace.CurrentCamera.ViewportSize.X/2, workspace.CurrentCamera.ViewportSize.Y)
                    line.To = Vector2.new(screenPos.X, screenPos.Y)
                    line.Visible = onScreen
                else
                    line.Visible = false
                end
            end)
        end
    end
end

ESPTab:CreateToggle({
    Name = "Highlight Players",
    SectionParent = ESPSection,
    CurrentValue = false,
    Callback = ToggleHighlight
})

ESPTab:CreateToggle({
    Name = "Hitbox ESP",
    SectionParent = ESPSection,
    CurrentValue = false,
    Callback = ToggleHitbox
})

ESPTab:CreateToggle({
    Name = "Trace players",
    SectionParent = ESPSection,
    CurrentValue = false,
    Callback = ToggleTracer
})

-- TAB: Credits
local CreditsTab = Window:CreateTab("Credits", 4483362458)
local CreditsSection = CreditsTab:CreateSection("hi thanks for using byterhub")

CreditsTab:CreateParagraph({
    Title = "Made by Chez",
    Content = "i will be adding more things to this script"
})
CreditsTab:CreateButton({
    Name = "Join Discord Server",
    SectionParent = CreditsSection,
    Callback = function()
        setclipboard("https://discord.gg/jdA2PsmeDK")
        Rayfield:Notify({
            Title = "Discord Link Copied!",
            Content = "Invite copied to clipboard!",
            Duration = 5
        })
    end
})
-- TAB: Others
local OthersTab = Window:CreateTab("Others", 4483362458)
local OthersSection = OthersTab:CreateSection("Misc Tools")

-- Relaunch script
OthersTab:CreateButton({
    Name = "Relaunch Script",
    SectionParent = OthersSection,
    Callback = function()
        Rayfield:Notify({
            Title = "Relaunching...",
            Content = "Script will reload.",
            Duration = 3
        })
        task.wait(1)
        loadstring(game:HttpGet("https://raw.githubusercontent.com/snigglaberry/byterhub/refs/heads/main/byterhub"))()
    end
})

-- UNC Test
OthersTab:CreateButton({
    Name = "Run UNC Test",
    SectionParent = OthersSection,
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/unified-naming-convention/NamingStandard/refs/heads/main/UNCCheckEnv.lua"))()
        Rayfield:Notify({
            Title = "UNC Test",
            Content = "Check run executed.",
            Duration = 3
        })
    end
})

-- Exec info,yea so i gave up on ts
local execName = "Unknown"
if identifyexecutor then
    execName = identifyexecutor()
elseif getexecutorname then
    execName = getexecutorname()
elseif is_sirhurt_closure then
    execName = "SirHurt"
elseif is_sentinel_closure then
    execName = "Sentinel"
elseif KRNL_LOADED then
    execName = "KRNL"
elseif syn then
    execName = "Synapse X"
end

OthersTab:CreateSection("Executor Info")
OthersTab:CreateParagraph({
    Title = "Executor Detected",
    Content = "Name: " .. execName
})
-- didnt know what t put here so i made chatgpt make sum
OthersTab:CreateButton({
    Name = "Print All Executor Details",
    Callback = function()
        print("Executor Info:")
        for k, v in pairs(getrenv()) do
            print("[getrenv]", k, v)
        end
        for k, v in pairs(getfenv()) do
            print("[getfenv]", k, v)
        end
        if identifyexecutor then print("identifyexecutor:", identifyexecutor()) end
        if getexecutorname then print("getexecutorname:", getexecutorname()) end
        if is_sirhurt_closure then print("SirHurt detected") end
        if is_sentinel_closure then print("Sentinel detected") end
        if KRNL_LOADED then print("KRNL detected") end
        if syn then print("Synapse detected") end
    end
})
